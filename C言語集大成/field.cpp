/*******************************************************************************
* タイトル:		fieldプログラム
* プログラム名:	field.cpp
* 作成者:		GP11A132 99 外岡高明
* 作成日:		2024/05/26
*******************************************************************************/

/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "main.h"
#include "field.h"
#include "player.h"


/*******************************************************************************
* マクロ定義
*******************************************************************************/


/*******************************************************************************
* 構造体定義
*******************************************************************************/


/*******************************************************************************
* プロトタイプ宣言(こんな関数を用意してありますよ宣言/関数の説明書)
*******************************************************************************/



/*******************************************************************************
* グローバル変数
*******************************************************************************/
extern PLAYER g_Player[PLAYER_MAX];


// マップデータ
char field_org[FIELD_H][FIELD_W + 1] = { // オリジナルfieldデータ（横を+1しているのは文末のNULLの分）
	"****************************************************************************************************",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"*                                                                                                  *",
	"*       *                                                                                          *",
	"*       *                              *                                                           *",
	"*                    *******           *                                                           *",
	"*                                      *                                                           *",
	"*                                      *                    **********                             *",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"*****************       ****************                                                           *",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"*                                      *           ##############                                  *",
	"*                                      *           ##############                                  *",
	"*                                      *           ##############                                  *",
	"*                                                                                                  *",
	"*                                                                      ***********                 *",
	"*                                                                                                  *",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"*                  **                  *                                                           *",
	"*                  **                  *                                                           *",
	"*                  **                  *                                                           *",
	"*                                      *                                                           *",
	"*                                      *             ***********                                   *",
	"*                                      *             ***********                                   *",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"*                                      *                                                           *",
	"****************************************************************************************************",

};

char field[FIELD_H][FIELD_W + 1] = {	// 表示用fieldデータ（横を+1しているのは文末のNULLの分）
	"****************************************************************************************************",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"*                                                                                                  *",
	"****************************************************************************************************",
};



// fieldの初期化処理
void InitField(void)
{
	/* オリジナルfieldデータを表示用fieldデータへコピー */
	memcpy(field, field_org, sizeof(field));
	//SetMode(GAME_PLAYER);
}


// fieldの終了処理
void UninitField(void)
{

}


// fieldの更新処理
void UpdateField(void)
{
	/* オリジナルfieldデータを表示用fieldデータへコピー */
	memcpy(field, field_org, sizeof(field));

	

}


// field描画処理
void DrawField(void)
{
	/* 処理速度調整 */
	//std::this_thread::sleep_for(std::chrono::milliseconds(10));

	/* 画面クリア */
	std::system("cls");

	/* マップ描画処理 */
	for (int i = 0; i < FIELD_H; i++)
	{
		std::cout << &field[i][0] << "\n";
	}

	


}


// 指定した座標にdataを書き込む
void SetField(int y, int x, char data)
{
	field[y][x] = data;
}


// 指定した座標に書かれているfieldデータを取得する
char GetField(int y, int x)
{
	return field[y][x];
}


// 指定した座標はOKな場所？
// OKな場所なら0
// NGな場所なら0以外
int CheckField(int y, int x)
{
	int ans = 0;	// とりあえずOKをセットしておく

	// NGな場所？
	char data = field[y][x];
	switch(data)
	{
	case '*':
		ans = 1;	//壁 その場所はNGだったので1をセットする
		break;
	case '#':
		ans = 2;    //草むら　入れる
		break;

	default:
		break;
	}

	return ans;		// 結果を返す
}


