/*******************************************************************************
* タイトル:		Playerプログラム
* プログラム名:	player.cpp
* 作成者:		GP11A132 99 外岡高明
* 作成日:		2024/05/26
*******************************************************************************/

/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "main.h"
#include "player.h"
#include "field.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/


/*******************************************************************************
* 構造体定義
*******************************************************************************/


/*******************************************************************************
* プロトタイプ宣言(こんな関数を用意してありますよ宣言/関数の説明書)
*******************************************************************************/



/*******************************************************************************
* グローバル変数
*******************************************************************************/
PLAYER g_Player[PLAYER_MAX];

// フィールド用メンバー変数





// プレイヤーの初期化処理
void InitPlayer(void)
{

	// 構造体の初期化

	for (int i = 0; i < PLAYER_MAX; i++) {
		g_Player[i].x = 0;
		g_Player[i].y = 0;

		g_Player[i].old_x = 0;
		g_Player[i].old_y = 0;

		g_Player[i].hp = 100;
	}

	//初期化
	g_Player[0].y = 2;
	g_Player[0].x = 2;
	g_Player[0].hp = 100;

}


// プレイヤーの終了処理
void UninitPlayer(void)
{

}


// プレイヤーの更新処理
void UpdatePlayer(void)
{
	if (g_Player[0].hp <= 0) {
		return;
	}//0ならぬける

	// 動く前の座標を保存しておく（移動してぶつかった時はこの座標へ戻す為）
	g_Player[0].old_x = g_Player[0].x;
	g_Player[0].old_y = g_Player[0].y;

	// キー入力処理
	int key = _getch();
	if ((key == 0) || (key == 224))	// 特殊Keyならもう１度取得する
	{
		key = _getch();
	}

	// 押されたkeyの方向へ移動させる
	switch (key)
	{
	case 'a':
	case 0x4b:	// ←
		g_Player[0].x -= 1;
		break;

	case 'd':
	case 0x4d:	// →
		g_Player[0].x += 1;
		break;

	case 'w':
	case 0x48:	// ↑
		g_Player[0].y -= 1;
		break;

	case 's':
	case 0x50:	// ↓
		g_Player[0].y += 1;
		break;

	default:
		break;
	}

	// MAPとの当たり判定処理
	// 移動した先はNGな場所？
	int answer = CheckField(g_Player[0].y, g_Player[0].x);
	switch(answer)
	{
	case 1:	// 移動してはNGな場所だったので前の場所へ戻す
		g_Player[0].y = g_Player[0].old_y;
		g_Player[0].x = g_Player[0].old_x;
		break;

	default:
		break;
	}


}


// プレイヤーの描画処理
void DrawPlayer(void)
{

	for (int i = 0; i < PLAYER_MAX; i++) {

		if (g_Player[0].hp <= 0) {
			continue;
		}//０以下ならスキップ

		SetField(g_Player[i].y, g_Player[i].x, 'P');
	}
	// プレイヤーをMAPの指定座標へ書き込む
	
}




