/*******************************************************************************
* タイトル:		タイトルプログラム
* プログラム名:	title.cpp
* 作成者:		GP11A132 99 外岡高明
* 作成日:		2024/05/26
*******************************************************************************/

/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "main.h"
#include "title.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/


/*******************************************************************************
* 構造体定義
*******************************************************************************/


/*******************************************************************************
* プロトタイプ宣言(関数の説明書)
*******************************************************************************/



/*******************************************************************************
* グローバル変数
*******************************************************************************/

// 縦24行分、横80文字分を4画面分
char title[DISP_H * ANIM_CNT][DISP_W] = {
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                            {/}{/}                                            \n",
	"                            {/}{/}   {/}{/}                                   \n",
	"                            {/}{/}   {/}{/}                                   \n",
	"                            {/}{/}   {/}{/}                                   \n",
	"                            {/}{/}   {/}{/}      {/}                          \n",
	"                            {/}{/}   {/}{/}      {/}                          \n",
	"                            {/}{/}   {/}{/}   {/}{/}                          \n",
	"                            {/}{/}   {/}{/}{/}{/}                             \n",
	"                            {/}{/}   {/}{/}{/}                                \n",
	"                            {/}      {/}{/}                                   \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",


	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                 {/}                          \n",
	"                                               {/} {/}                        \n",
	"                               {/}{/}  {/}{/}    {/}                          \n",
	"                               {/}{/}   {/}{/}                                \n",
	"                               {/}{/}    {/}{/}                               \n",
	"                              {/}{/}     {/}{/}                               \n",
	"                             {/}{/}       {/}{/}                              \n",
	"                             {/}{/}       {/}{/}                              \n",
	"                             {/}{/}        {/}{/}                             \n",
	"                            {/}{/}          {/}{/}                            \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",


	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                             {/}{/}{/}                                        \n",
	"                                {/}{/}      {/}{/}                            \n",
	"                                            {/}{/}                            \n",
	"                                            {/}{/}                            \n",
	"                                           {/}{/}                             \n",
	"                                           {/}{/}                             \n",
	"                                         {/}{/}                               \n",
	"                                     {/}{/}{/}                                \n",
	"                                   {/}{/}                                     \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",
	"                                                                              \n",


	"   {/}{/}                                        {/}                          \n",
	"   {/}{/}   {/}{/}                             {/} {/}  {/}{/}{/}             \n",
	"   {/}{/}   {/}{/}             {/}{/}  {/}{/}    {/}       {/}{/}      {/}{/} \n",
	"   {/}{/}   {/}{/}             {/}{/}   {/}{/}                         {/}{/} \n",
	"   {/}{/}   {/}{/}      {/}    {/}{/}    {/}{/}                        {/}{/} \n",
	"   {/}{/}   {/}{/}      {/}   {/}{/}     {/}{/}                       {/}{/}  \n",
	"   {/}{/}   {/}{/}   {/}{/}  {/}{/}       {/}{/}                      {/}{/}  \n",
	"   {/}{/}   {/}{/}{/}{/}     {/}{/}       {/}{/}                    {/}{/}    \n",
	"   {/}{/}   {/}{/}{/}        {/}{/}        {/}{/}               {/}{/}{/}     \n",
	"   {/}      {/}{/}          {/}{/}          {/}{/}            {/}{/}          \n",
	"                                                                              \n",
	"           {/}{/}{/}{/}{/}{/}{/}{/}           {/}{/}   {/}{/}   {/}{/}        \n",
	"           {/}{/}{/}{/}{/}{/}{/}{/}       {/}{/}{/}{/}{/}{/}{/}{/}{/}{/}      \n",
	"             {/}{/} {/}{/} {/}{/}         {/}{/}{/}{/}{/}{/}{/}{/}{/}{/}      \n",
	"             {/}{/} {/}{/} {/}{/}             {/}{/}   {/}{/}   {/}{/}        \n",
	"             {/}{/} {/}{/} {/}{/}             {/}{/}   {/}{/}   {/}{/}        \n",
	"             {/}{/} {/}{/} {/}{/}             {/}{/}   {/}{/}{/}{/}{/}        \n",
	"             {/}{/} {/}{/} {/}{/}             {/}{/}   {/}{/}{/}{/}{/}        \n",
	"             {/}{/} {/}{/} {/}{/}             {/}{/}                          \n",
	"             {/}{/} {/}{/} {/}{/}             {/}{/}                          \n",
	"           {/}{/}{/}{/}{/}{/}{/}{/}           {/}{/}{/}{/}{/}{/}{/}{/}        \n",
	"           {/}{/}{/}{/}{/}{/}{/}{/}           {/}{/}{/}{/}{/}{/}{/}{/}        \n",
	"                                                                              \n",
	"                        Created by Takaaki Tonooka 2024                       \n",
};

char Name[DISP_H][DISP_W] = {
"                                                                             \n",
"                                                                             \n",
"                                                                             \n",
"                                                                             \n",
"                                                                             \n",
"                                                                             \n",
"                                                                             \n",
"          _          _                          _                            \n",
"         / `      __| | __   __   ___   _ __   | |_   _   _   _ __    ___    \n",
"        / _ `    / _` | ` ` / /  / _ ` | '_ `  | __| | | | | | '__|  / _ `   \n",
"       / ___ `  | (_| |  ` V /  |  __/ | | | | | |_  | |_| | | |    |  __/   \n",
"      /_/   `_`  `__,_|   `_/    `___| |_| |_|  `__|  `__,_| |_|     `___|   \n",
"            _             ___         _                       _              \n",
"           (_)  _ __     |_ _|  ___  | |   __ _   _ __     __| |             \n",
"           | | | '_ `     | |  / __| | |  / _` | | '_ `   / _` |             \n",
"           | | | | | |    | |  {`__` | | | (_| | | | | | | (_| |             \n",
"           |_| |_| |_|   |___| |___/ |_|  `__,_| |_| |_|  `__,_|             \n",
"                                                                             \n",
"                                                                             \n",
"                                                                             \n",
"                                                                             \n",
"                          Created by DING FENG 2024                          \n",
"                                                                             \n",
"                          Press any key to continue                          \n",
};


int g_TitleLoopCount;			// タイトルの描画を繰り返す為のカウンター


// タイトルの初期化処理
void InitTitle(void)
{
	g_TitleLoopCount = 0;

}


// タイトルの終了処理
void UninitTitle(void)
{

}


// タイトルの更新処理
void UpdateTitle(void)
{
	// テストでルパン３世を２回繰り返してみる
	g_TitleLoopCount++;
	if (g_TitleLoopCount > 2)
	{
		// キー入力待ち
		std::rewind(stdin);
		std::cin.get();

		SetMode(GAME_MENU);		// Fieldに移動
	}

}


// タイトル画面処理
void DrawTitle(void)
{

	/* アニメーションループ */
	//for (int y = 0; y < DISP_H * ANIM_CNT; y++)
	//{
	//	/* 1画面分表示したら少しウェイトさせる */
	//	if (y % DISP_H == 0)
	//	{
	//		/* ウェイト */
	//		std::this_thread::sleep_for(std::chrono::milliseconds(500));

	//		/* 画面クリア */
	//		system("cls");
	//	}

	//	// １文字ずつだと遅いから１行ずつ表示させる
	//	std::cout << &title[y][0];

	//}

	/* 画面描画処理 */
	for (int y = 0; y < DISP_H; y++)
	{
		/* ウェイト */
		std::this_thread::sleep_for(std::chrono::milliseconds(50));

		// １文字ずつだと遅いから１行ずつ表示させる
		std::cout << &Name[y][0];

	}

	while (!_kbhit()) {
		std::this_thread::sleep_for(std::chrono::milliseconds(100));
	}

	system("cls");
	std::this_thread::sleep_for(std::chrono::milliseconds(500));
	SetMode(GAME_MENU);


}



